// Generated by CoffeeScript 1.10.0
var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

window.AppView = (function(superClass) {
  extend(AppView, superClass);

  function AppView() {
    return AppView.__super__.constructor.apply(this, arguments);
  }

  AppView.prototype.className = 'play-table';

  AppView.prototype.template = _.template('<button class="hit-button">Hit</button> <button class="stand-button">Stand</button> <button class="reset-button">Deal Another Hand</button> <div class="player-hand-container"></div> <div class="dealer-hand-container"></div>');

  AppView.prototype.events = {
    'click .hit-button': function() {
      return this.model.get('playerHand').hit();
    },
    'click .stand-button': function() {
      return this.model.get('playerHand').stand();
    },
    'click .reset-button': function() {
      return this.model.reset();
    }
  };

  AppView.prototype.initialize = function() {
    this.model.on('all', this.filter, this);
    return this.render();
  };

  AppView.prototype.render = function() {
    this.$el.children().detach();
    this.$el.html(this.template());
    this.$('.player-hand-container').html(new HandView({
      collection: this.model.get('playerHand')
    }).el);
    return this.$('.dealer-hand-container').html(new HandView({
      collection: this.model.get('dealerHand')
    }).el);
  };

  AppView.prototype.filter = function(trigger) {
    var self;
    console.log(trigger);
    if (trigger === 'youWinApp' || trigger === 'dealerWinApp' || trigger === 'blackJackWinApp' || trigger === 'youPushApp' || trigger === 'reshuffle') {
      self = this;
      return _.delay(function() {
        return self.endCondition(trigger);
      });
    } else if (trigger === 'reset') {
      return this.render();
    }
  };

  AppView.prototype.endCondition = function(endTrigger) {
    var display;
    console.log(endTrigger, 'in endCondtion');
    if (endTrigger === 'youWinApp') {
      display = 'You win!!';
    }
    if (endTrigger === 'blackJackWinApp') {
      display = 'BlackJack!<p>You Win!';
    }
    if (endTrigger === 'youPushApp') {
      display = 'You Push!';
    }
    if (endTrigger === 'dealerWinApp') {
      display = 'You lose!';
    }
    if (endTrigger === 'reshuffle') {
      display = 'Shuffling the deck!<p>Click "Deal Another Hand" to continue!';
    }
    return this.$('.dealer-hand-container').append('<div class="win">' + '<span class="win-text">' + display + '</span>' + '</div>').fadeIn('slow');
  };

  return AppView;

})(Backbone.View);
